// Generated by CoffeeScript 1.10.0
(function() {
  var Main, main;

  String.prototype.startsWith = function(str) {
    return this.slice(0, str.length) === str;
  };

  String.prototype.endsWith = function(suffix) {
    return this.indexOf(suffix, this.length - suffix.length) !== -1;
  };

  String.prototype.trim = function() {
    return this.replace(/^\s+|\s+$/g, '');
  };

  Main = (function() {
    function Main() {}

    Main.prototype.run = function() {
      var data, file, filePath, root;
      root = app.activeDocument;
      filePath = File.saveDialog("保存先指定(*.csv)");
      if (filePath) {
        data = this["export"](root);
        file = new File(filePath);
        file.encoding = "UTF-8";
        file.open("w", "TEXT");
        file.write(data.join("\n"));
        return file.close();
      }
    };

    Main.prototype["export"] = function(root) {
      var a, dict, i, j, len, len1, ref, ref1, result, textFrame, used;
      dict = [];
      used = [];
      ref = root.textFrames;
      for (i = 0, len = ref.length; i < len; i++) {
        textFrame = ref[i];
        if (textFrame.locked) {
          continue;
        }
        if (textFrame.visible) {
          continue;
        }
        if (textFrame.contents.replace(/[\n\r]+/g, ' ').replace(/ /, '') === "") {
          continue;
        }
        dict.push(textFrame.contents.replace(/[\n\r]+/g, ' '));
      }
      result = [];
      ref1 = dict.reverse();
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        a = ref1[j];
        result.push(a);
      }
      return result;
    };

    return Main;

  })();

  main = new Main();

  main.run();

  alert('complete!');

}).call(this);
